# Generated by Django 2.0 on 2018-01-06 12:11

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Drivertrace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('From_Date', models.DateField()),
                ('To_Date', models.DateField()),
                ('select', models.CharField(choices=[('All', 'All'), ('Selected', 'Selected'), ('unselected', 'unselected')], max_length=10)),
                ('Branch_or_Pump', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Branch/Pump')),
                ('Branch_or_Pump1', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Branch/Pump')),
                ('Ref_no_select', models.CharField(choices=[('Vehicle no', 'Vehicle no'), ('Driver', 'Driver'), ('Tripsheet', 'Tripsheet'), ('Advice no', 'Advice no')], max_length=10, verbose_name=' ')),
                ('Ref_no', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name=' ')),
                ('Page_no', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Page_size', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('CR_Account', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('DR_Account', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Date', models.DateField()),
                ('Reference_no', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Vehicle_no', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Driver_name', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Driver_code', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Type', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Fuel', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Advance', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Fuel_qty', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Rate', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Settlement_no', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('TL_info', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Remarks', models.CharField(max_length=350)),
                ('Group_V_no', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Group_V_Date', models.DateField()),
                ('Acc_Date', models.DateField()),
                ('Creater', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Created_Date', models.DateField()),
                ('Modifier', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Modified_Date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Joballot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Mechanic', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')], verbose_name='Mechanic/Supervisor')),
                ('Date', models.DateField()),
                ('Vehicle_no', models.CharField(max_length=20)),
                ('Job_no', models.CharField(max_length=20)),
                ('Job', models.CharField(max_length=20)),
                ('Vehicle', models.CharField(max_length=20)),
                ('Time_taken', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Remarks', models.CharField(max_length=350)),
                ('DOE', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
            ],
        ),
        migrations.CreateModel(
            name='Toll_Verification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('From_Date', models.DateField()),
                ('To_Date', models.DateField()),
                ('Vehicle_No', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Activity', models.CharField(choices=[('Item1', 'Item1'), ('Item2', 'Item2')], max_length=100)),
                ('Date', models.DateField()),
                ('Voucher_Reg_No', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Activity1', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Activity')),
                ('POS', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Amount', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('DrCr', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Exception1', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Exception')),
            ],
        ),
        migrations.CreateModel(
            name='Tolllog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('File', models.FileField(upload_to='documents/')),
                ('name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Tolltag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('File', models.FileField(upload_to='documents/')),
            ],
        ),
        migrations.CreateModel(
            name='trip_advance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Advance_Search', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Office', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Voucher_Type', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Ref_Date', models.DateField()),
                ('Debit_Account', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Ref_No', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Credit_Account', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Fuel_To', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Nature', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Fuel_Type', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Vehicle', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Quantity', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Driver', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Rate', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Trip_Log_No', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Amount', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Remark', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
            ],
        ),
        migrations.CreateModel(
            name='Trip_Advances_Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Search', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('From_Date', models.DateField()),
                ('DOE', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Office', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Voucher_Type', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Ref_Date', models.DateField()),
                ('Advice_No', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Ref_No', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Debit_Account', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Nature', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Credit_Account', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Fuel_To', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Fuel_Type', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Quantity', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Rate', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Amounts', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Vehicle', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Driver', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Trip_Log_No', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Remarks', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Voucher_No', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('RefDate', models.DateField()),
                ('Vehicle_No', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Voucher_Types', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Driver_Name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Dr_AC', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Cr_AC', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Amount', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Remark', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
            ],
        ),
        migrations.CreateModel(
            name='Tripexpense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Expense', models.CharField(choices=[('1st Driver Salary', '1st Driver Salary'), ('2nd Driver Salary', '2nd Driver Salary'), ('Accident Exp.', 'Accident Exp.'), ('ATM Charge', 'ATM Charge'), ('Atm Toll Tax', 'Atm Toll Tax'), ('Bhehti', 'Bhehti'), ('Challan', 'Challan'), ('Cleaner Salary', 'Cleaner Salary'), ('Delhi Challan', 'Delhi Challan'), ('Diesel Bonus', 'Diesel Bonus'), ('Diesel Exp.', 'Diesel Exp.'), ('Diesel Rate Diff.', 'Diesel Rate Diff.'), ('Driver Negligence', 'Driver Negligence'), ('Entry Challan', 'Entry Challan'), ('FASTAG', 'FASTAG'), ('Fooding', 'Fooding'), ('Hnadling', 'Hnadling'), ('Incentive', 'Incentive'), ('Kanta Parchi', 'Kanta Parchi'), ('Late Arrival', 'Late Arrival'), ('Mechanical Challan', 'Mechanical Challan'), ('Mhpe Expanse', 'Mhpe Expanse'), ('Mobile Grease Exp.', 'Mobile Grease Exp.'), ('NAKA', 'NAKA'), ('Other exp.', 'Other exp.'), ('Others', 'Others'), ('Overload Challan', 'Overload Challan'), ('Penalty', 'Penalty')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='TripLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('From_Date', models.DateField()),
                ('To_Date', models.DateField()),
                ('Status', models.CharField(choices=[('Item1', 'Item1'), ('Item2', 'Item2')], max_length=100)),
                ('Vehicle', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Date', models.DateField()),
                ('Vehicle_No', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Triping_No', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Activity', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Amount', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('DR_CR', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('POS', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Remark', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
            ],
        ),
        migrations.CreateModel(
            name='Triplogtrace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('From_Date', models.DateField()),
                ('To_Date', models.DateField()),
                ('select', models.CharField(choices=[('All', 'All'), ('Selected', 'Selected'), ('unselected', 'unselected')], max_length=10)),
                ('Party', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Type_select', models.CharField(choices=[('Vehicle no', 'Vehicle no'), ('Driver', 'Driver'), ('Tripsheet', 'Tripsheet')], max_length=10, verbose_name=' ')),
                ('Type_value', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name=' ')),
                ('Page_no', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Page_size', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('TLHS_no', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Vehicle_no', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Driver_name', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Driver_code', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Phone_no', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('\\+?\\d[\\d -]{8,12}\\d', 'Please enter valid contact number')])),
                ('Gurantor', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Route', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Km', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('LR_no', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Material', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Reached_days', models.CharField(max_length=3, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Loading_date', models.DateField()),
                ('TTTime', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Expected_date', models.DateField()),
                ('Reporting_date', models.DateField()),
                ('Status_place', models.CharField(max_length=3, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Unloading_Date', models.DateField()),
                ('Remarks', models.CharField(max_length=350)),
                ('Delay_days_vehicle_not_reached', models.CharField(max_length=3, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Delay_days_vehicle_reached', models.CharField(max_length=3, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
            ],
        ),
        migrations.CreateModel(
            name='Tripsheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Vehicle_no', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('TS_no', models.CharField(max_length=20)),
                ('Office', models.CharField(max_length=20)),
                ('From_Date', models.DateField()),
                ('To_Date', models.DateField()),
                ('Settled_Date', models.DateField()),
                ('First_driver', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Second_Driver', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Cleaner', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Budget_trip_qty', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Budget_ref_qty', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Addt_Fuel_qty', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Actual_Fuel_qty', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Variance', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Rcvd_from_drv_qty', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Rcvd_from_drv_amt', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Fuel_average', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Run_km', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Add_km', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Total_km', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Refer_hours', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Mkt_Freight', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Fuel_exps', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Trip_exps', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Trip_exps1', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')], verbose_name='Trip_exps')),
                ('Op_bal', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Trip_adv', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Shortages', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Payments', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Less_exp', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Cl_bal', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Description', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Description1', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')], verbose_name='Description')),
                ('Route', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Route1', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Route')),
                ('Ref_no', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Ref_no1', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Ref_no')),
                ('Date1', models.DateField(verbose_name='Date')),
                ('Date2', models.DateField(verbose_name='Date')),
                ('Pump', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Fuel_type', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Qty', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Rate', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Rate1', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')], verbose_name='Rate')),
                ('Amount', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('TL_HS', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='TL/HS')),
                ('Expense', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Used_Amt', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Short_Amt', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('TLHS_no', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('TLHS_no1', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='TLHS_no')),
                ('L_Date', models.DateField()),
                ('Party_Name', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Distance', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Freight', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Budget_qty', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Tot_ACHours', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('AC_Bud_Qty', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Material', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Load_qty', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Unl_Date', models.DateField()),
                ('LR_Freight', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Date3', models.DateField(verbose_name='Date')),
                ('Driver', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('CR_Account', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('DR_Account', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Cash_amt', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Fuel_qty', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Fuel_qty1', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')], verbose_name='Fuel_qty')),
                ('Fuel_amt', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Triplog_no', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Settled', models.CharField(choices=[('Y', 'Y'), ('N', 'N')], max_length=1)),
                ('Remarks', models.CharField(max_length=350)),
            ],
        ),
        migrations.CreateModel(
            name='Ttriplog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Vehicle_no', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Vehicle_no1', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Vehicle_no')),
                ('Vehicle_no2', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Vehicle_no')),
                ('Triplog_no', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Office', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Office1', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Office')),
                ('Reporting_branch', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Loading_date', models.DateField()),
                ('VHM_no', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Ref_no', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Remarks', models.CharField(max_length=350)),
                ('Route_list', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Route_list1', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Route_list')),
                ('Trip_days', models.CharField(max_length=3, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Trip_advance', models.BooleanField()),
                ('Trailer_no', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Vehicle_type', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Trip_status', models.CharField(choices=[('EMPTY', 'EMPTY'), ('mARKET LOAD', 'mARKET LOAD')], max_length=15)),
                ('Route_Nature', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('First_driver', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Second_Driver', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Cleaner', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Party', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Material', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Loaded_crates', models.CharField(max_length=3, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Empty_crates', models.CharField(max_length=3, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('POD_status', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Delivery_Status', models.CharField(choices=[('OK', 'OK'), ('NOT OK', 'NOT OK'), ('NO DETAIL', 'NO DETAIL')], max_length=10)),
                ('POD_Deposit_At', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Revenue_total', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Fuel_exps', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')], verbose_name='Fuel Exp(Bdgt)')),
                ('Trip_exps', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')], verbose_name='Trip exps(Bdgt)')),
                ('Advance', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')], verbose_name='Advance(Bdgt)')),
                ('Fuel_qty', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')], verbose_name='Fuel qty Exp(Bdgt)')),
                ('Refer_fuel_qty', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')], verbose_name='Refer fuel qty(Bdgt)')),
                ('Start_km', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('End_km', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Route_km', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Additional_Km', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Total_km_perhr', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')], verbose_name='Total km/hr')),
                ('Trip_count', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Load_R_Date', models.DateField()),
                ('Load_Date', models.DateField()),
                ('Unloading_R_Date', models.DateField()),
                ('Unloading_Date', models.DateField()),
                ('Exp_Delivery_Date', models.DateField()),
                ('Octroi_Reach_Date', models.DateField()),
                ('Octroi_Left_Date', models.DateField()),
                ('Loading_qty', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Refer_temp', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Rate', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Mkt_Freight1', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Mkt_Freight')),
                ('Mkt_Freight2', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Mkt_Freight')),
                ('Add_Trip_Exp', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Load_km', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Empty_Km', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Trip_type', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Parent_trip', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Adjustment_type', models.CharField(choices=[('Wt*Km', 'Wt*Km'), ('PCS*Km', 'PCS*Km'), ('PCS*Wt*Km', 'PCS*Wt*Km'), ('Equal', 'Equal'), ('Manual', 'Manual'), ('Km', 'Km')], max_length=20)),
                ('Weight', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Unit', models.CharField(choices=[('Feet', 'Feet'), ('Fixed', 'Fixed'), ('Gram', 'Gram'), ('Inch', 'Inch'), ('Kg', 'Kg'), ('Kit', 'Kit'), ('Ltr.', 'Ltr.'), ('Mtr.', 'Mtr.'), ('PC', 'PC'), ('Set', 'Set')], max_length=7, verbose_name='  ')),
                ('No_of_pieces', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('CN_Feight_Total', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('LR_List', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Billing_Party', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Date', models.DateField()),
                ('Date1', models.DateField(verbose_name='Date')),
                ('Date2', models.DateField(verbose_name='Date')),
                ('Pcs', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('P_Unit', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Wt', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Wt_Unit', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('CN_Feight', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Voucher_no', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Voucher_type', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Driver_name', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('CR_Account', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('DR_Account', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Amount', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Remarks1', models.CharField(max_length=350, verbose_name='Remarks')),
                ('Remarks2', models.CharField(max_length=350, verbose_name='Remarks')),
                ('Exp_name', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Fuel_qty1', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Amt_allowed', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Amt_settled', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Status', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Location', models.CharField(max_length=80, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Nature', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Time', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Created', models.CharField(choices=[('Y', 'Y'), ('N', 'N')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicleauth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Vehicle_no', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Vehicle_no1', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Vehicle_no')),
                ('Category', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('classs', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Class')),
                ('Driver', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Driver1', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Driver')),
                ('License_exp_date', models.DateField()),
                ('Driver_balance', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Exposure', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Sanction', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Total', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Triplog', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Loading_date', models.DateField()),
                ('Client', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Route', models.CharField(max_length=250, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Bdgt_distance', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Bdgt_exp', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Bgdt_qty', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Actual_cash_amt', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Actual_fuel_amt', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Variance_fuel_qty', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Variance_qty', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Amt', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Voucher_type', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Voucher_type1', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')], verbose_name='Voucher_type')),
                ('Credit_amt', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Nature', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Nature1', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Nature')),
                ('Trip_log_no', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Fuel_to', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Fuel_to1', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Fuel_to')),
                ('Fuel_type', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Fuel_type1', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')], verbose_name='Fuel_Type')),
                ('Quantity', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Quantity1', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')], verbose_name='Quantity')),
                ('Rate', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Rate1', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')], verbose_name='Rate')),
                ('Date', models.DateField()),
                ('Amount', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Remarks', models.CharField(max_length=350)),
                ('Action', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('CR_Account', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Driver_Adv', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
                ('Fuel_adv', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Only numers and floating numbers allowed')])),
            ],
        ),
    ]
