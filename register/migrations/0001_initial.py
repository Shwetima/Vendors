# Generated by Django 2.0 on 2017-12-28 09:07

import django.core.validators
from django.db import migrations, models
import register.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BrokersAgentRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BrokersAgent_Id', models.IntegerField(default=register.models.BrokersAgentRegistration.number, unique=True)),
                ('company_name', models.CharField(max_length=40, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('BrokersAgent_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('BrokersAgent_reg_date', models.DateField()),
                ('BrokersAgent_address', models.TextField(max_length=100)),
                ('BrokersAgent_city', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('BrokersAgent_pin', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^[0-9]{6}$', 'enter valid pin')])),
                ('BrokersAgent_contact', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator('\\+?\\d[\\d -]{8,12}\\d', 'Please enter valid contact number')])),
                ('contract', models.FileField(upload_to='documents/')),
            ],
        ),
        migrations.CreateModel(
            name='DealerRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dealer_id', models.IntegerField(default=register.models.DealerRegistration.number, unique=True)),
                ('company_name', models.CharField(max_length=40, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('dealer_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('dealer_reg_date', models.DateField()),
                ('dealer_address', models.TextField(max_length=100)),
                ('dealer_city', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('dealer_pin', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^[0-9]{6}$', 'enter valid pin')])),
                ('dealer_contact', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator('\\+?\\d[\\d -]{8,12}\\d', 'Please enter valid contact number')])),
                ('contract', models.FileField(upload_to='documents/')),
            ],
        ),
        migrations.CreateModel(
            name='DisposalProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Disposal_Id', models.IntegerField(default=register.models.DisposalProvider.number, unique=True)),
                ('company_name', models.CharField(max_length=40, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Disposal_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Disposal_reg_date', models.DateField()),
                ('Disposal_address', models.TextField(max_length=100)),
                ('Disposal_city', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Disposal_pin', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^[0-9]{6}$', 'enter valid pin')])),
                ('Disposal_contact', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator('\\+?\\d[\\d -]{8,12}\\d', 'Please enter valid contact number')])),
                ('contract', models.FileField(upload_to='documents/')),
            ],
        ),
        migrations.CreateModel(
            name='DriverRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Driver_Id', models.IntegerField(default=register.models.DriverRegistration.number, unique=True)),
                ('company_name', models.CharField(max_length=40, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Driver_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Driver_reg_date', models.DateField()),
                ('Driver_address', models.TextField(max_length=100)),
                ('Driver_city', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Driver_pin', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^[0-9]{6}$', 'enter valid pin')])),
                ('Driver_contact', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator('\\+?\\d[\\d -]{8,12}\\d', 'Please enter valid contact number')])),
                ('contract', models.FileField(upload_to='documents/')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Employee_Id', models.IntegerField(default=register.models.EmployeeRegistration.number, unique=True)),
                ('company_name', models.CharField(max_length=40, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Employee_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Employee_reg_date', models.DateField()),
                ('Employee_address', models.TextField(max_length=100)),
                ('Employee_city', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Employee_pin', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^[0-9]{6}$', 'enter valid pin')])),
                ('Employee_contact', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator('\\+?\\d[\\d -]{8,12}\\d', 'Please enter valid contact number')])),
                ('contract', models.FileField(upload_to='documents/')),
            ],
        ),
        migrations.CreateModel(
            name='FinancerRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('financer_id', models.IntegerField(default=register.models.FinancerRegistration.number, unique=True)),
                ('company_name', models.CharField(max_length=40, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('reg_date', models.DateField()),
                ('financer_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('address', models.TextField(max_length=100)),
                ('city', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('pin', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^[0-9]{6}$', 'enter valid pin')])),
                ('contact', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator('\\+?\\d[\\d -]{8,12}\\d', 'Please enter valid contact number')])),
                ('contract', models.FileField(upload_to='documents/')),
            ],
        ),
        migrations.CreateModel(
            name='LoadProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Load_Id', models.IntegerField(default=register.models.LoadProvider.number, unique=True)),
                ('company_name', models.CharField(max_length=40, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Load_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Load_reg_date', models.DateField()),
                ('Load_address', models.TextField(max_length=100)),
                ('Load_city', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Load_pin', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^[0-9]{6}$', 'enter valid pin')])),
                ('Load_contact', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator('\\+?\\d[\\d -]{8,12}\\d', 'Please enter valid contact number')])),
                ('contract', models.FileField(upload_to='documents/')),
            ],
        ),
        migrations.CreateModel(
            name='ManpowerProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Manpower_Id', models.IntegerField(default=register.models.ManpowerProvider.number, unique=True)),
                ('company_name', models.CharField(max_length=40, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Manpower_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Manpower_reg_date', models.DateField()),
                ('Manpower_address', models.TextField(max_length=100)),
                ('Manpower_city', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Manpower_pin', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^[0-9]{6}$', 'enter valid pin')])),
                ('Manpower_contact', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator('\\+?\\d[\\d -]{8,12}\\d', 'Please enter valid contact number')])),
                ('contract', models.FileField(upload_to='documents/')),
            ],
        ),
        migrations.CreateModel(
            name='RawmaterialProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Raw_Id', models.IntegerField(default=register.models.RawmaterialProvider.number, unique=True)),
                ('company_name', models.CharField(max_length=40, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Raw_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Raw_reg_date', models.DateField()),
                ('Raw_address', models.TextField(max_length=100)),
                ('Raw_city', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Raw_pin', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^[0-9]{6}$', 'enter valid pin')])),
                ('Raw_contact', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator('\\+?\\d[\\d -]{8,12}\\d', 'Please enter valid contact number')])),
                ('contract', models.FileField(upload_to='documents/')),
            ],
        ),
        migrations.CreateModel(
            name='RepairMaintenanceProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RepairMaintenance_Id', models.IntegerField(default=register.models.RepairMaintenanceProvider.number, unique=True)),
                ('company_name', models.CharField(max_length=40, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('RepairMaintenance_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('RepairMaintenance_reg_date', models.DateField()),
                ('RepairMaintenance_address', models.TextField(max_length=100)),
                ('RepairMaintenance_city', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('RepairMaintenance_pin', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^[0-9]{6}$', 'enter valid pin')])),
                ('RepairMaintenance_contact', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator('\\+?\\d[\\d -]{8,12}\\d', 'Please enter valid contact number')])),
                ('contract', models.FileField(upload_to='documents/')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Vehicle_Id', models.IntegerField(default=register.models.VehicleRegistration.number, unique=True)),
                ('company_name', models.CharField(max_length=40, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Vehicle_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Vehicle_reg_date', models.DateField()),
                ('Vehicle_address', models.TextField(max_length=100)),
                ('Vehicle_city', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Vehicle_pin', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^[0-9]{6}$', 'enter valid pin')])),
                ('Vehicle_contact', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator('\\+?\\d[\\d -]{8,12}\\d', 'Please enter valid contact number')])),
                ('contract', models.FileField(upload_to='documents/')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleResaleProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('VehicleResale_Id', models.IntegerField(default=register.models.VehicleResaleProvider.number, unique=True)),
                ('company_name', models.CharField(max_length=40, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('VehicleResale_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('VehicleResale_reg_date', models.DateField()),
                ('VehicleResale_address', models.TextField(max_length=100)),
                ('VehicleResale_city', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('VehicleResale_pin', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^[0-9]{6}$', 'enter valid pin')])),
                ('VehicleResale_contact', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator('\\+?\\d[\\d -]{8,12}\\d', 'Please enter valid contact number')])),
                ('contract', models.FileField(upload_to='documents/')),
            ],
        ),
    ]
