# Generated by Django 2.0 on 2018-01-04 07:07

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Jobsheet_detail',
            fields=[
                ('JobSheet_no', models.CharField(max_length=20)),
                ('Vehicle_no', models.CharField(max_length=10)),
                ('In_date', models.DateField()),
                ('Out_date', models.DateField()),
                ('Curr_Reading', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Km_Run', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Prev_Reading', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Prev_date', models.DateField()),
                ('Type', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Driver_code', models.CharField(max_length=10)),
                ('Driver_name', models.CharField(max_length=10)),
                ('Lic_Expiry', models.DateField()),
                ('Driver_Cont_No', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('\\+?\\d[\\d -]{8,12}\\d', 'Please enter valid contact number')])),
                ('Supervisor', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('SN', models.AutoField(primary_key=True, serialize=False)),
                ('On_Date', models.DateField()),
                ('Tyre_no', models.CharField(max_length=15)),
                ('S', models.CharField(choices=[('Y', 'Y'), ('N', 'N')], max_length=1)),
                ('O', models.CharField(choices=[('Y', 'Y'), ('N', 'N')], max_length=1)),
                ('L', models.CharField(max_length=1, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Model', models.CharField(max_length=20)),
                ('Prev_Km_Run', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Total_Km_Run', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Last_WP', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Last_PSI', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Last_WP_date', models.DateField()),
                ('Last_NSD', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Current_WP', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Current_PSI', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Current_WP_date', models.DateField()),
                ('Current_NSD', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
            ],
        ),
        migrations.CreateModel(
            name='MRN_Invoice',
            fields=[
                ('SN', models.AutoField(primary_key=True, serialize=False)),
                ('Spare_code', models.CharField(max_length=10)),
                ('Spare_Name', models.CharField(max_length=50)),
                ('Make', models.CharField(max_length=50)),
                ('MRN_Qty', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('MRN_Unit', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Base_Unit', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Base_Qty', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Rate', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Last_Ref_No', models.CharField(max_length=50)),
                ('Last_purchase_date', models.DateField()),
                ('Last_purchase_rate', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Last_purchase_make', models.CharField(max_length=10)),
                ('Amount', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Discount_per', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Discount', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('CST_per', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('CST', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Avg_rate', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Total_amount', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Description', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Tyre_brand_master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Search_Tyre_Brand', models.CharField(choices=[('Apollo', 'Apollo'), ('Bridgestone', 'Bridgestone'), ('CEAT', 'CEAT'), ('MRF', 'MRF'), ('Falken Tyres', 'Falken Tyres'), ('Goodyear', 'Goodyear')], max_length=15)),
                ('Status', models.CharField(choices=[('Active', 'Active'), ('Suspended', 'Suspended'), ('Deleted', 'Deleted')], max_length=10)),
                ('Brand_code', models.CharField(max_length=20)),
                ('Brand_name', models.CharField(max_length=20)),
                ('Manufacturer', models.CharField(max_length=20)),
                ('Budgeted_life_in_km', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Type', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('NSD', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Minimum_NSD', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Nature', models.CharField(max_length=20)),
                ('Ply_rating', models.CharField(max_length=10)),
                ('Remarks', models.CharField(max_length=350)),
            ],
        ),
        migrations.CreateModel(
            name='Tyre_Inward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nature', models.CharField(choices=[('Tyre MRN', 'Tyre MRN'), ('Chassis Tyre MRN', 'Chassis Tyre MRN'), ('Remould Tyre MRN', 'Remould Tyre MRN'), ('Tyre against Claim MRN', 'Tyre against Claim MRN'), ('Tyre Claim Rejection MRN', 'Tyre Claim Rejection MRN'), ('Tyre Remould Rejection MRN', 'Tyre Remould Rejection MRN'), ('Tyre Claim Recieved', 'Tyre Claim Recieved'), ('Old Tyre MRN', 'Old Tyre MRN')], max_length=20)),
                ('Tyre_Specifier', models.CharField(max_length=20)),
                ('Office', models.CharField(max_length=20)),
                ('Tyre_Supplier', models.CharField(max_length=20)),
                ('MRN_Date', models.DateTimeField()),
                ('Dlivery_Challan_No', models.CharField(max_length=20)),
                ('Document_No', models.CharField(max_length=20)),
                ('Delivey_Challan_Date', models.DateTimeField()),
                ('Store', models.CharField(max_length=20)),
                ('Tyre_no', models.CharField(max_length=20)),
                ('Brand_name', models.CharField(max_length=20)),
                ('R', models.CharField(choices=[('Y', 'Y'), ('N', 'N')], max_length=1)),
                ('Amount', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Total_tyre', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Total_amount', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
            ],
        ),
        migrations.CreateModel(
            name='Tyre_Issue_to_Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nature', models.CharField(choices=[('Tyre MRN', 'Tyre MRN'), ('Chassis Tyre MRN', 'Chassis Tyre MRN'), ('Remould Tyre MRN', 'Remould Tyre MRN'), ('Tyre against Claim MRN', 'Tyre against Claim MRN'), ('Tyre Claim Rejection MRN', 'Tyre Claim Rejection MRN'), ('Tyre Remould Rejection MRN', 'Tyre Remould Rejection MRN'), ('Tyre Claim Recieved', 'Tyre Claim Recieved'), ('Old Tyre MRN', 'Old Tyre MRN')], max_length=20)),
                ('Office', models.CharField(max_length=20)),
                ('Store', models.CharField(max_length=20)),
                ('Narration', models.CharField(max_length=350)),
                ('Issue_Date', models.DateField()),
                ('Tyre_Expense', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Issue_no', models.CharField(max_length=20)),
                ('Voucher_Date', models.DateField()),
                ('Total_tyre', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('\\+?\\d[\\d -]{8,12}\\d', 'Please enter valid contact number')])),
                ('TP_amount', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Tyre_no', models.CharField(max_length=20)),
                ('Vehicle_no', models.CharField(max_length=20)),
                ('On_Km', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('O', models.CharField(choices=[('Y', 'Y'), ('N', 'N')], max_length=1)),
                ('S', models.CharField(choices=[('Y', 'Y'), ('N', 'N')], max_length=1)),
                ('Wheel_Position', models.CharField(choices=[('Front-left', 'Front-left'), ('Front-right', 'Front-right'), ('Rear-inward-left', 'Rear-inward-left'), ('Rear-inward-right', 'Rear-inward-right'), ('Rear-outward-left', 'Rear-outward-left'), ('Rear-outward-right', 'Rear-outward-right')], max_length=20)),
                ('PSI', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Reciept_Tyre_against_Issue', models.CharField(max_length=20)),
                ('TP_amt', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('\\+?\\d[\\d -]{8,12}\\d', 'Please enter valid contact number')])),
                ('Amount', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('\\+?\\d[\\d -]{8,12}\\d', 'Please enter valid contact number')])),
                ('Remarks', models.CharField(max_length=350)),
            ],
        ),
        migrations.CreateModel(
            name='Tyre_outward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nature', models.CharField(choices=[('Tyre Send to Remould', 'Tyre Send to Remould'), ('Tyre Send to Claim', 'Tyre Send to Claim'), ('Tyre Resale to Buyer', 'Tyre resale to Buyer'), ('Tyre theft', 'Tyre theft'), ('Tyre Scrapping Old Tyres', 'Tyre Scrapping Old Tyres')], max_length=20)),
                ('Office', models.CharField(max_length=20)),
                ('Gate_Pass_no', models.CharField(max_length=20)),
                ('Narration', models.CharField(max_length=350)),
                ('Date', models.DateField()),
                ('Reciept_no', models.CharField(max_length=20)),
                ('Store', models.CharField(max_length=20)),
                ('Tyre_no', models.CharField(max_length=20)),
                ('Brand_name', models.CharField(max_length=20)),
                ('Supplier', models.CharField(max_length=20, verbose_name='Supplier Name')),
                ('Purchase_date', models.DateField()),
                ('Purchased_amt', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Vehicle_no', models.CharField(max_length=10)),
                ('Vehicle_out_date', models.DateField()),
                ('Remarks', models.CharField(max_length=350)),
            ],
        ),
        migrations.CreateModel(
            name='Tyre_Reciept_from_Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nature', models.CharField(default='Tyre_Reciept_from_Vehicle', max_length=20)),
                ('Store', models.CharField(max_length=20)),
                ('Vehicle', models.CharField(max_length=20)),
                ('Office', models.CharField(max_length=20)),
                ('Naration', models.CharField(max_length=350)),
                ('Reciept_no', models.CharField(max_length=20)),
                ('Owner', models.CharField(max_length=20)),
                ('Km_calculation_criteria', models.CharField(default='OutKm-OnKm', max_length=20)),
                ('Total_tyres', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Tyre_no', models.CharField(max_length=20)),
                ('On_date', models.DateField()),
                ('On_km', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Out_km', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Km_Run', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('S', models.CharField(choices=[('Y', 'Y'), ('N', 'N')], max_length=1)),
                ('Month', models.CharField(choices=[('1 Month', '1 Month'), ('2 Month', '2 Month'), ('3 Month', '3 Month'), ('4 Month', '4 Month'), ('5 Month', '5 Month'), ('6 Month', '6 Month'), ('1 Year', '1 Year')], max_length=10)),
                ('Reason', models.CharField(max_length=350)),
                ('Issue_tyre_against_reciept', models.CharField(max_length=20)),
                ('Renark', models.CharField(max_length=350)),
            ],
        ),
        migrations.CreateModel(
            name='Tyre_status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Vehicle_no', models.CharField(max_length=10)),
                ('Tyre_no', models.CharField(max_length=20)),
                ('Date', models.DateField()),
                ('WP', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', 'Only letters and spaces are allowed')])),
                ('Depth', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('PSI', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Km', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Remarks', models.CharField(max_length=350)),
            ],
        ),
        migrations.CreateModel(
            name='Tyre_str_transfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nature', models.CharField(choices=[('Tyre Store Transfer', 'Tyre Store Transfer'), ('Tyre Re-purchase', 'Tyre Re-purchase')], max_length=20)),
                ('Store', models.CharField(max_length=20, verbose_name='Store In/Out')),
                ('Office', models.CharField(max_length=20)),
                ('Outward_store', models.CharField(max_length=20)),
                ('Inward_store', models.CharField(max_length=20)),
                ('Date', models.DateField()),
                ('Reference_no', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('From_date', models.DateField()),
                ('To_Date', models.DateField()),
                ('Total_tyre', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Total_amount', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Tyre_no', models.CharField(max_length=20)),
                ('Brand_name', models.CharField(max_length=20)),
                ('Supplier_name', models.CharField(max_length=20, verbose_name='Supplier Name')),
                ('Vehicle_no', models.CharField(max_length=10)),
                ('Out_date', models.DateField()),
                ('Purchase_date', models.DateField()),
                ('Transfer_amt', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Tyre_status', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Tyre_trace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Tyre_no', models.CharField(max_length=20)),
                ('Document_no', models.CharField(max_length=20)),
                ('Document_date', models.DateField()),
                ('DR_Ac', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('CR_Ac', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Status', models.CharField(max_length=20)),
                ('Card_no', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Life', models.CharField(max_length=10)),
                ('Sty', models.CharField(max_length=10)),
                ('Vehicle_no', models.CharField(max_length=10)),
                ('Km_reading', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Km_Run', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Tyre_cost', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('TP_cost', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Scrap_cost', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Estimated_cost', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Reason', models.CharField(max_length=350)),
                ('Bill_no', models.CharField(max_length=10)),
                ('Remarks', models.CharField(max_length=350)),
            ],
        ),
        migrations.CreateModel(
            name='Tyre_Vendor_Bill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nature', models.CharField(default='Tyre Vendor Bill', max_length=20)),
                ('Supplier', models.CharField(max_length=20)),
                ('Office', models.CharField(max_length=20)),
                ('Store', models.CharField(max_length=20)),
                ('Reference_no', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Naration', models.CharField(max_length=350)),
                ('Document_date', models.DateField()),
                ('Challan_No', models.CharField(max_length=20)),
                ('Document_no', models.CharField(max_length=20)),
                ('Voucher_date', models.DateField()),
                ('Total_tyres', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'enter valid number')])),
                ('Total_amount', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
                ('Tyre_no', models.CharField(max_length=20)),
                ('Brand', models.CharField(max_length=20)),
                ('R', models.CharField(choices=[('Y', 'Y'), ('N', 'N')], max_length=1)),
                ('New_Tyre_amt', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[1-9]\\d*(\\.\\d+)?$', 'Enter valid salary')])),
            ],
        ),
        migrations.CreateModel(
            name='Update_Tyre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Tyre_no', models.CharField(max_length=20)),
                ('Production_month', models.DateField()),
                ('Scrap_analysis', models.BooleanField()),
                ('Alert', models.BooleanField()),
                ('Brand_name', models.CharField(max_length=20)),
            ],
        ),
    ]
